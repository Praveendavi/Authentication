[{"D:\\Node-project\\Authetication_project\\client\\src\\index.js":"1","D:\\Node-project\\Authetication_project\\client\\src\\App.js":"2","D:\\Node-project\\Authetication_project\\client\\src\\component\\Home.js":"3","D:\\Node-project\\Authetication_project\\client\\src\\component\\Navbar.js":"4","D:\\Node-project\\Authetication_project\\client\\src\\component\\Signin.js":"5","D:\\Node-project\\Authetication_project\\client\\src\\component\\Signup.js":"6","D:\\Node-project\\Authetication_project\\client\\src\\component\\Logout.js":"7","D:\\Node-project\\Authetication_project\\client\\src\\component\\Protected.js":"8","D:\\Node-project\\Authetication_project\\client\\src\\component\\ActiveEmail.js":"9","D:\\Node-project\\Authetication_project\\client\\src\\component\\ForgetPassword.js":"10","D:\\Node-project\\Authetication_project\\client\\src\\component\\ResetPassword.js":"11"},{"size":197,"mtime":1611653694170,"results":"12","hashOfConfig":"13"},{"size":1030,"mtime":1612021059826,"results":"14","hashOfConfig":"13"},{"size":250,"mtime":1611664787840,"results":"15","hashOfConfig":"13"},{"size":1292,"mtime":1611665854944,"results":"16","hashOfConfig":"13"},{"size":3030,"mtime":1612094910192,"results":"17","hashOfConfig":"13"},{"size":2974,"mtime":1612424908526,"results":"18","hashOfConfig":"13"},{"size":208,"mtime":1611661539326,"results":"19","hashOfConfig":"13"},{"size":635,"mtime":1611664897812,"results":"20","hashOfConfig":"13"},{"size":908,"mtime":1611993718040,"results":"21","hashOfConfig":"13"},{"size":1372,"mtime":1612456771438,"results":"22","hashOfConfig":"13"},{"size":1989,"mtime":1612099886919,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"680e1t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Node-project\\Authetication_project\\client\\src\\index.js",[],["51","52"],"D:\\Node-project\\Authetication_project\\client\\src\\App.js",[],"D:\\Node-project\\Authetication_project\\client\\src\\component\\Home.js",[],"D:\\Node-project\\Authetication_project\\client\\src\\component\\Navbar.js",[],"D:\\Node-project\\Authetication_project\\client\\src\\component\\Signin.js",["53"],"import React, { useState } from 'react'\r\nimport M from 'materialize-css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport PixelphantLogo from '../image/logo.png'\r\nconst Signin = () => {\r\n\r\n    const [ email, setEmail ] = useState(\"\")\r\n    const [ password, setPassword ] = useState(\"\")\r\n\r\n    let history = useHistory()\r\n\r\n    const SigninData = (e) =>{\r\n        e.preventDefault()\r\n        fetch('/signin', {\r\n            method: \"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email, password\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({  html: data.error,classes: \"#ef5350 red lighten-1\" })\r\n            }\r\n            else{\r\n                M.toast({ html: data.message,classes:\"#43a047 green darken-1\" })\r\n                localStorage.setItem('signin', data)\r\n                history.push('/')\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"signin_section\">\r\n        <div className=\"main_menu\">\r\n        <div className=\"left_menu\">\r\n                <div className=\"center_div\">\r\n                <h2>Welcome To Pixelphant</h2>\r\n                    <p>signin to continue our application</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"right_menu\">\r\n                <div className=\"signin_header\">\r\n                    <img src={PixelphantLogo} />\r\n                    <button className=\"google_btn\">sign in with google</button>\r\n                    <div className=\"sm_design\">\r\n                        <span></span>\r\n                        <p>Or signin with email</p>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n\r\n            <div className=\"form\" >\r\n                <form>\r\n                    <div className=\"form-group \">\r\n                        <label>Email Address</label>\r\n                        <input type=\"email\" name=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}  />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" name=\"password\" placeholder=\"\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}  />\r\n                    </div>\r\n                    <button onClick={(e) => SigninData(e)} className=\" signin_btn\">Signin</button>\r\n                    <div className=\"signin_footer_section\">\r\n                        <Link to=\"/user/forget_password\" className=\"forgot_pass\" >Forgot Your Password?</Link>\r\n                        <p className=\"signup_link\">Don't have a account? <Link className=\"signup_danger\" to=\"/signup\" >Signup</Link></p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","D:\\Node-project\\Authetication_project\\client\\src\\component\\Signup.js",["54"],"import React,{ useState } from 'react'\r\nimport M from 'materialize-css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport PixelphantLogo from '../image/logo.png'\r\n\r\nconst Signup = () => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    let history = useHistory()\r\n\r\n    const SignupData = (e) =>{\r\n        e.preventDefault()\r\n        fetch('/signup',{\r\n            method: \"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n                M.toast({ html: data.error })\r\n            }\r\n            else{\r\n                M.toast({ html: data.message })\r\n                history.push('/signin')\r\n            }\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"signin_section\">\r\n           <div className=\"main_menu\">\r\n          \r\n            <div className=\"right_menu\">\r\n                <div className=\"signin_header\">\r\n                    <img src={PixelphantLogo} />\r\n                    <div className=\"sm_design\">\r\n                        <span></span>\r\n                        <p>Signup with email</p>\r\n                        <span></span>\r\n                    </div>\r\n                </div>\r\n                <form>\r\n         <div className=\"form-group\">\r\n                <label>Name: </label>\r\n                <input type=\"text\" className=\"form-control\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)}  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Email: </label>\r\n                <input type=\"email\" className=\"form-control\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}  />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Password: </label>\r\n                <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}  />\r\n            </div>\r\n                    <button onClick={(e) => SignupData(e)} className=\" signin_btn\">Signup</button>\r\n                    <div className=\"signin_footer_section\">\r\n                        <p className=\"signup_link\">Already have a account? <Link className=\"signup_danger\" to=\"/signin\" >Signin</Link></p>\r\n                    </div>\r\n                </form>\r\n          </div>\r\n          <div className=\"left_menu\">\r\n                <div className=\"center_div\">\r\n                    <h2>Welcome To Pixelphant</h2>\r\n                    <p>signup to continue our application</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Signup\r\n","D:\\Node-project\\Authetication_project\\client\\src\\component\\Logout.js",[],"D:\\Node-project\\Authetication_project\\client\\src\\component\\Protected.js",["55"],"import React, { useState } from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nconst Protected = ({ component: Component, ...rest }) =>{\r\n    return (\r\n        <div className=\"protected_section\" >\r\n            <div className=\"protected_container\">\r\n            <Route \r\n            { ...rest }\r\n                render={(props) =>\r\n                    localStorage.getItem('signin') ? (\r\n                        <Component { ...props } />\r\n                    ):\r\n                    <Redirect to=\"/signin\" />\r\n                }\r\n              />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Protected","D:\\Node-project\\Authetication_project\\client\\src\\component\\ActiveEmail.js",["56","57"],"import React,{ useState, useEffect } from 'react'\r\nimport { useParams,useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport M from 'materialize-css'\r\n\r\nconst ActiveEmail = () => {\r\n\r\n    const { activation_token } = useParams()\r\n    const history = useHistory();\r\n\r\n\r\n\r\n    useEffect(() =>{\r\n       if(activation_token){\r\n            const activationEmail = async ( ) =>{\r\n                try{\r\n                    const res = await axios.post('/activation', { activation_token })\r\n                    M.toast({ html: res.data.message })\r\n                    history.push('/')\r\n                }\r\n                catch(error){\r\n                    console.log('Something went wrong')\r\n                }\r\n            } \r\n            activationEmail();\r\n       }\r\n    },[activation_token])\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveEmail\r\n","D:\\Node-project\\Authetication_project\\client\\src\\component\\ForgetPassword.js",["58"],"D:\\Node-project\\Authetication_project\\client\\src\\component\\ResetPassword.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":46,"column":21,"nodeType":"65","endLine":46,"endColumn":49},{"ruleId":"63","severity":1,"message":"64","line":46,"column":21,"nodeType":"65","endLine":46,"endColumn":49},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":27,"column":7,"nodeType":"72","endLine":27,"endColumn":25,"suggestions":"73"},{"ruleId":"66","severity":1,"message":"74","line":11,"column":11,"nodeType":"68","messageId":"69","endLine":11,"endColumn":18},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["77"],"'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [activation_token, history]",{"range":"80","text":"81"},[786,804],"[activation_token, history]"]